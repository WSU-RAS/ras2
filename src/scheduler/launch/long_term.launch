<?xml version="1.0"?>
<launch>
    <!-- Can be set as argument during roslaunch -->
    <arg name="new_map" default="false" />
    <arg name="gui" default="false" />
    <arg name="lab" default="false" />

    <!-- Manager -->
    <node name="manager" pkg="scheduler" type="long_manager.py" output="screen" />

    <!-- Robot -->
    <node name="goto" pkg="scheduler" type="goto.py" output="screen" />
    <node name="find_person_server" pkg="find_person" type="find_person_server.py" output="screen" />

    <!--
         Since we don't have good if/else or switch statements and you can't
         change arg values...

         new_map true: then save to map.pbstream
         new_map false:
             lab true: load casas.pbstream
             lab false: load kyoto.pbstream
         -->
    <group if="$(eval new_map == true)">
        <!-- Navigation -->
        <include file="$(find ras_navigation)/launch/RAS_Navigation.launch">
            <arg name="new_map" value="$(arg new_map)" />
            <arg name="gui" value="$(arg gui)" />
            <arg name="map_name" value="map.pbstream" />
        </include>
    </group>
    <group if="$(eval new_map == false)">
        <group if="$(eval lab == true)">
            <!-- Navigation -->
            <include file="$(find ras_navigation)/launch/RAS_Navigation.launch">
                <arg name="new_map" value="$(arg new_map)" />
                <arg name="gui" value="$(arg gui)" />
                <arg name="map_name" value="casas.pbstream" />
            </include>
        </group>
        <group if="$(eval lab == false)">
            <!-- Navigation -->
            <include file="$(find ras_navigation)/launch/RAS_Navigation.launch">
                <arg name="new_map" value="$(arg new_map)" />
                <arg name="gui" value="$(arg gui)" />
                <arg name="map_name" value="kyoto.pbstream" />
            </include>
        </group>
    </group>


    <!-- Tablet -->
    <include file="$(find tablet_interface)/launch/web.launch" />

    <!-- Camera, object detection, etc. --> 
    <node name="jetson" pkg="scheduler" type="jetson.sh" args="$(arg lab)" output="screen" />
    <!-- for experimenter interface, to see video -->
    <node name="web_video_server" pkg="web_video_server" type="web_video_server" />

    <!-- Casas handlers -->
    <include file="$(find casas_interface)/launch/casas.launch"/>


</launch>
