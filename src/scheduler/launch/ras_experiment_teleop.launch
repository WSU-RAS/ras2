<?xml version="1.0"?>
<launch>
    <!-- Can be set as argument during roslaunch -->
    <arg name="use_robot" default="false" /> <!-- use teleop rather than navigation, camera, etc. -->
    <arg name="use_tablet" default="true" />
    <arg name="use_error" default="true" />
    <arg name="use_camera" default="false" />

    <arg name="save_task" default="false" />
    <arg name="is_test" default="false" /> <!-- if TRUE, log casas data to test agent instead of kyoto -->
    <arg name="use_location" default="false" /> <!-- if FALSE, uses only estimote sensors, TRUE includes ambient sensors -->
    <arg name="lab" default="false" /> <!-- uses lab map -->

    <!-- Parameters -->
    <param name="ras/use_robot" value="$(arg use_robot)" type="bool" />
    <param name="ras/use_tablet" value="$(arg use_tablet)" type="bool" />
    <param name="ras/is_test" value="$(arg is_test)" type="bool" />

    <!-- Manager -->
    <node name="manager" pkg="scheduler" type="manager.py" output="screen" />

    <!-- Robot for teleop; then connect via keyboard teleop or via Android app -->
    <!--
    <include file="$(find turtlebot3_bringup)/launch/turtlebot3_robot.launch"/>
    <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch"/>
    -->

    <!-- Tablet -->
    <group if="$(arg use_tablet)">
        <include file="$(find tablet_interface)/launch/web.launch" />
    </group>

    <!-- Not for navigating, only for determining where we are in the map for CASAS logging

         lab true: load casas.pbstream
         lab false: load kyoto.pbstream
         -->
    <group if="$(eval lab == true)">
        <!-- Navigation -->
        <include file="$(find ras_navigation)/launch/RAS_Navigation.launch">
            <arg name="map_name" value="casas.pbstream" />
        </include>
    </group>
    <group if="$(eval lab == false)">
        <!-- Navigation -->
        <include file="$(find ras_navigation)/launch/RAS_Navigation.launch">
            <arg name="map_name" value="kyoto.pbstream" />
        </include>
    </group>

    <!-- Allow powering off from experimenter interface -->
    <node name="poweroff" pkg="scheduler" type="poweroff.py" output="screen" />

    <!-- Error detection -->
    <group if="$(arg use_error)">
        <include file="$(find adl_error_detection)/launch/detect_error.launch">
            <arg name="is_test" value="$(arg is_test)" />
            <arg name="save_task" value="$(arg save_task)" />
            <arg name="use_location" value="$(arg use_location)" />
        </include>
    </group>

    <!-- Camera, object detection, etc. -->
    <group if="$(arg use_camera)">
        <node name="jetson" pkg="scheduler" type="jetson.sh" args="$(arg lab)" output="screen" />
        <!-- for experimenter interface, to see video -->
        <node name="web_video_server" pkg="web_video_server" type="web_video_server" />
    </group>
</launch>
